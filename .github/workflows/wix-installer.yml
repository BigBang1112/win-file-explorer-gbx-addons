name: Build Installer

on:
  release:
    types: [published]

env:
  ARTIFACT_NAME: artifact
  
permissions:
  contents: write # important for release description edit and asset upload

jobs:
  prepare-description:
    runs-on: ubuntu-latest
    name: Set release description
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Set release information
        run: gh release edit ${{ github.ref_name }} -n "$(echo -e '### *[Release is being automatically created, please wait...](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})*\n\n${{ github.event.release.body }}')"
  
  build:
    needs: prepare-description
  
    strategy:
      matrix:
        addon: [{ name: Thumbnail, runtime: x64 }, { name: Thumbnail, runtime: x86 }]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Test
      run: dotnet test Tests/WinFileExplorerGbxAddons.${{ matrix.addon.name }}.Tests --no-restore --verbosity normal
      
    - name: Install Wix
      run: dotnet tool install --global wix
      
    - name: Build Setup
      run: dotnet build -c Release -r win-${{ matrix.addon.runtime }} /p:Platform=${{ matrix.addon.runtime }} -o setup Installers\WinFileExplorerGbxAddons.${{ matrix.addon.name }} --no-self-contained
    
    - name: Calculate SHA256
      run: |
        $hash = Get-FileHash -Path 'setup/en-US/WinFileExplorerGbxAddons.${{ matrix.addon.name }}.msi' -Algorithm SHA256
        $hashValue = $hash.Hash.ToLower()
        Write-Host $hashValue
        $hashValue | Out-File -FilePath "setup/en-US/WinFileExplorerGbxAddons.${{ matrix.addon.name }}.msi.hash.${{ matrix.addon.runtime }}.txt"
        
    - name: Upload WinFileExplorerGbxAddons.${{ matrix.addon.name }}.msi to this release
      run: gh release upload ${{ github.ref_name }} WinFileExplorerGbxAddons.${{ matrix.addon.name }}.msi#Installer (${{ matrix.addon.name }}, ${{ matrix.addon.runtime }})
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: setup/en-US/WinFileExplorerGbxAddons.${{ matrix.addon.name }}.msi.hash.${{ matrix.addon.runtime }}.txt
        if-no-files-found: error
  
  finalize-description:
    needs: build
    
    runs-on: ubuntu-latest
    name: Finalize release description
    
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: ${{ env.ARTIFACT_NAME }}
      
      - name: Read hash files
        run: |
          echo "HashThumbnailX64=$(tr -d '\r' < WinFileExplorerGbxAddons.Thumbnail.msi.hash.x64.txt)" >> $GITHUB_ENV
          echo "HashThumbnailX86=$(tr -d '\r' < WinFileExplorerGbxAddons.Thumbnail.msi.hash.x86.txt)" >> $GITHUB_ENV
      
      - name: Set release information
        run: gh release edit ${{ github.ref_name }} -n "$(echo -e '${{ github.event.release.body }}\n\n**WinFileExplorerGbxAddons.Thumbnail SHA256 x64** `${{ env.HashThumbnailX64 }}`\n**WinFileExplorerGbxAddons.Thumbnail SHA256 x86** `${{ env.HashThumbnailX86 }}`\n\nAssets were automatically generated using the [publish workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).')"
